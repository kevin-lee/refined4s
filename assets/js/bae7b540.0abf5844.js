"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[427],{7305:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"core/newtype/newtype","title":"Newtype","description":"Import","source":"@site/../generated-docs/docs/core/newtype/newtype.md","sourceDirName":"core/newtype","slug":"/core/newtype/","permalink":"/docs/core/newtype/","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"id":"newtype","title":"Newtype"},"sidebar":"docsSidebar","previous":{"title":"core module","permalink":"/docs/core/"},"next":{"title":"Refined","permalink":"/docs/core/refined/"}}');var t=a(4848),i=a(8453);const r={sidebar_position:1,id:"newtype",title:"Newtype"},s=void 0,c={},o=[{value:"<code>Import</code>",id:"import",level:2},{value:"Define Newtype",id:"define-newtype",level:2},{value:"Create Value",id:"create-value",level:2},{value:"Get Actual Value",id:"get-actual-value",level:2},{value:"Pattern Matching",id:"pattern-matching",level:2},{value:"Example",id:"example",level:2}];function d(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h2,{id:"import",children:(0,t.jsx)(n.code,{children:"Import"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"import refined4s.*\n"})}),"\n",(0,t.jsx)(n.h2,{id:"define-newtype",children:"Define Newtype"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"type NewtypeName = NewtypeName.Type\nobject NewtypeName extends Newtype[ActualType]\n"})}),"\n",(0,t.jsx)(n.p,{children:"e.g.)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"type Name = Name.Type\nobject Name extends Newtype[String]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"create-value",children:"Create Value"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"val newtypeName = NewtypeName(value)\n"})}),"\n",(0,t.jsx)(n.p,{children:"e.g.)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'val name = Name("Kevin")\n// name: Type = "Kevin"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"get-actual-value",children:"Get Actual Value"}),"\n",(0,t.jsxs)(n.p,{children:["To get the actual value you can simply use the ",(0,t.jsx)(n.code,{children:"value"})," method."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:"newtypeName.value\n"})}),"\n",(0,t.jsx)(n.p,{children:"e.g.)"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'name.value\n// res0: String = "Kevin"\n'})}),"\n",(0,t.jsx)(n.h2,{id:"pattern-matching",children:"Pattern Matching"}),"\n",(0,t.jsxs)(n.p,{children:["For pattern matching, ",(0,t.jsx)(n.code,{children:"Newtype"})," has built-in ",(0,t.jsx)(n.code,{children:"unapply"})," so you can simply do"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'name match {\n  case Name(value) =>\n    println(s"Pattern matched value: $value")\n}\n// Pattern matched value: Kevin\n'})}),"\n",(0,t.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'import refined4s.*\n\ntype Name = Name.Type\nobject Name extends Newtype[String]\n\ntype Email = Email.Type\nobject Email extends Newtype[String]\n\ndef hello(name: Name): Unit = println(s"Hello ${name.value}")\n\ndef send(email: Email): Unit = println(s"Sending email to ${email.value}")\n\nval name = Name("Kevin")\n// name: Type = "Kevin"\n// Name.Type = "Kevin"\nname.value\n// res3: String = "Kevin"\n\nhello(name)\n// Hello Kevin\n\nval email = Email("kevin@blah.blah")\n// email: Type = "kevin@blah.blah"\n// Email.Type = "kevin@blah.blah"\nemail.value\n// res5: String = "kevin@blah.blah"\n\nsend(email)\n// Sending email to kevin@blah.blah\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'hello("Kevin")\n// error: \n// Found:    ("Kevin" : String)\n// Required: repl.MdocSession.MdocApp0.Name\n// error: \n// Line is indented too far to the left, or a `}` is missing\n// error: \n// Line is indented too far to the left, or a `}` is missing\n'})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-scala",children:'send("kevin@blah.blah")\n// error: \n// Found:    ("kevin@blah.blah" : String)\n// Required: repl.MdocSession.MdocApp0.Email\n// error: \n// Line is indented too far to the left, or a `}` is missing\n// error: \n// Line is indented too far to the left, or a `}` is missing\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>r,x:()=>s});var l=a(6540);const t={},i=l.createContext(t);function r(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);